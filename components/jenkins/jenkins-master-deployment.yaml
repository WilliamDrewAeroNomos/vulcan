---
apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: jenkins
  name: jenkins-volume-claim
spec:
  storageClassName: cloud-ssd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: jenkins
  name: jenkins-master-deployment
  labels: 
    app: jenkins-master
spec:
  selector:
    matchLabels:
      app: jenkins
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: jenkins
          image: williamdrew/jenkins-master
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          env:
            - name: JENKINS_OPTS
              value: --prefix=/jenkins
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: dockersock
              mountPath: "/var/run/docker.sock"
      initContainers:         
      - name: set-jenkins-home-permissions           
        image: alpine:3.11           
        command:  
        - chown 
        - -R  
        - 1000:1000             
        - /var/jenkins_home           
        volumeMounts:             
        - name: jenkins-home               
          mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-volume-claim
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
---
apiVersion: v1
kind: Service
metadata:
  namespace: jenkins
  name: jenkins
  labels:
    app: jenkins
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: jenkins
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: jenkins
  name: jenkins-routing
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/add-base-url: "true"
spec:
  rules:
  - http:
      paths:
      - path: /jenkins
        backend:
          serviceName: jenkins
          servicePort: 8080
---

